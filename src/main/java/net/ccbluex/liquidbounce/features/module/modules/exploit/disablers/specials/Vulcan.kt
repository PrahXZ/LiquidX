package net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.specials

import net.ccbluex.liquidbounce.event.PacketEvent
import net.ccbluex.liquidbounce.event.WorldEvent
import net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.DisablerMode
import net.ccbluex.liquidbounce.features.value.*
import net.ccbluex.liquidbounce.utils.PacketUtils
import net.minecraft.network.play.client.*
import net.minecraft.util.BlockPos
import net.minecraft.util.EnumFacing

class Vulcan : DisablerMode("Vulcan") {

    private val avoidPhaseBpValue = BoolValue("${valuePrefix}-NoBadPacket", true)
    private val delayValue = IntegerValue("${valuePrefix}-PacketDelay", 6, 3, 10)
    private var c03Counter = 0


    /*
    // TODO: This disabler was made by Dg636 (C00LC0D35), all credits to him.
    */

    override fun onEnable() {
        c03Counter = -15
    }
    override fun onWorld(event: WorldEvent) {
        c03Counter = -15
    }
    override fun onPacket(event: PacketEvent) {
        val packet = event.packet
        if (packet is C03PacketPlayer) {
            c03Counter++
            if (packet.isMoving) {
                if (c03Counter >= delayValue.get()) {
                    PacketUtils.sendPacketNoEvent(
                            C07PacketPlayerDigging(C07PacketPlayerDigging.Action.STOP_DESTROY_BLOCK,
                                    if (avoidPhaseBpValue.get()) { BlockPos.ORIGIN } else { BlockPos(mc.thePlayer.posX, mc.thePlayer.posY, mc.thePlayer.posZ) }, EnumFacing.DOWN)
                    )
                    c03Counter = 0
                } else if (c03Counter == delayValue.get() - 2) {
                    PacketUtils.sendPacketNoEvent(
                            C07PacketPlayerDigging(C07PacketPlayerDigging.Action.START_DESTROY_BLOCK,
                                    BlockPos.ORIGIN, EnumFacing.DOWN)
                    )
                }
            }
        }
    }
}
