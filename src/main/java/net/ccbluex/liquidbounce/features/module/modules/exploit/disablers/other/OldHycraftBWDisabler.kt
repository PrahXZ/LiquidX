package net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.other

import net.ccbluex.liquidbounce.LiquidBounce
import net.ccbluex.liquidbounce.event.PacketEvent
import net.ccbluex.liquidbounce.event.UpdateEvent
import net.ccbluex.liquidbounce.features.module.modules.exploit.Disabler
import net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.DisablerMode
import net.ccbluex.liquidbounce.utils.PacketUtils
import net.ccbluex.liquidbounce.utils.timer.MSTimer
import net.minecraft.network.play.client.C00PacketKeepAlive
import net.minecraft.network.play.client.C03PacketPlayer
import net.minecraft.network.play.client.C03PacketPlayer.C04PacketPlayerPosition
import net.minecraft.network.play.client.C0FPacketConfirmTransaction

class OldHycraftBWDisabler : DisablerMode("OldHycraftBW") {

    val timer = MSTimer()

    override fun onEnable() {
        timer.reset()
    }

    override fun onUpdate(event: UpdateEvent) {
        if (timer.hasTimePassed(7000)) {
            LiquidBounce.moduleManager[Disabler::class.java]!!.state = false
            timer.reset();
        }
    }

    override fun onPacket(event: PacketEvent) {
        val packet = event.packet
        if (packet is C0FPacketConfirmTransaction || packet is C00PacketKeepAlive) {
            event.cancelEvent()
        }
        if(packet is C03PacketPlayer) {
            event.cancelEvent()
            PacketUtils.sendPacketNoEvent(C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY, mc.thePlayer.posZ, mc.thePlayer.onGround))
        }
    }
}
