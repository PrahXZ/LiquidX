package net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.specials

import net.ccbluex.liquidbounce.LiquidBounce
import net.ccbluex.liquidbounce.event.PacketEvent
import net.ccbluex.liquidbounce.event.UpdateEvent
import net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.DisablerMode
import net.ccbluex.liquidbounce.features.module.modules.movement.Speed
import net.ccbluex.liquidbounce.features.value.*
import net.ccbluex.liquidbounce.utils.MovementUtils
import net.ccbluex.liquidbounce.utils.PacketUtils
import net.ccbluex.liquidbounce.utils.Rotation
import net.ccbluex.liquidbounce.utils.RotationUtils
import net.minecraft.network.play.client.C00PacketKeepAlive
import net.minecraft.network.play.client.C0FPacketConfirmTransaction

class Universocraft : DisablerMode("Universocraft") {


    private val disablers = ListValue("Universocraft-Mode", arrayOf("Null", "Null2"), "Null")

    private var lockRotation: Rotation? = null

    var uid = 0


    override fun onUpdate(event: UpdateEvent) {
        if (LiquidBounce.moduleManager[Speed::class.java]!!.state) {
            val limitedRotation = RotationUtils.limitAngleChange(RotationUtils.serverRotation, Rotation(MovementUtils.movingYaw, 30F), 120F)
            RotationUtils.setTargetRotation(limitedRotation, 20)
        }
    }

    override fun onDisable() {
        lockRotation = null
    }

    override fun onPacket(event: PacketEvent) {

        val packet = event.packet

        if (packet is C0FPacketConfirmTransaction) {
            when (disablers.get()) {
                "Null" -> {
                    if (mc.thePlayer.ticksExisted % 2575 < 120) {
                        PacketUtils.sendPacketNoEvent(C00PacketKeepAlive(Int.MIN_VALUE))
                        packet.uid = Short.MAX_VALUE
                    }
                }
                "Null2" -> {
                    if (mc.thePlayer.onGround) {
                        uid = packet.getUid().toInt()
                    } else {
                        packet.uid = (uid-2).toShort()
                        }
                    }
                }
            }
        }
}